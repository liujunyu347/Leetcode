class Solution:
    def twoSum(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
        d = dict()
        for i in range(len(nums)):
            diff = target - nums[i]
            if diff in d:
                return [d[diff],i]
            else:
                d[nums[i]] = i
        
    def twoSum(self, numbers, target):
        # write your code here
        if not numbers:
            return -1
        nums = sorted(numbers)
        left, right = 0, len(numbers) - 1 
        while left < right:
            if nums[left] + nums[right] == target:
                i = numbers.index(nums[left])
                j = numbers.index(nums[right])
                if i == j:  ##两个重复的数字时候，index只能返回最小的指针
                    k = numbers[i+1:].index(nums[right]) + i + 1
                    return [i, k]
                elif i < j:
                    return [i, j] 
                else:
                    return [j, i]
                #return [numbers.index(nums[left]), numbers.index(nums[right])]
            if nums[left] + nums[right] < target:
                left += 1 
            if nums[left] + nums[right] > target:
                right -= 1 
        return -1
                    
